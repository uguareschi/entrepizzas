{"version":3,"sources":["components/Header.js","components/Footer.js","screens/CalculatorScreen.js","screens/RecipeScreen.js","screens/HomeScreen.js","App.js","index.js"],"names":["Header","Navbar","bg","expand","collapseOnSelect","variant","Container","className","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","class","Footer","Row","Col","href","CalculatorScreen","useState","open","setOpen","mode","setMode","show","setShow","modalType","setModalType","hidration","setHidration","pizzaWeight","setPizzaWeight","pizzaQty","setPizzaQty","divisorValue","flour","setFlour","water","setWater","salt","setSalt","yeast","setYeast","useEffect","fluid","Button","onClick","aria-expanded","block","lg","InputGroup","Prepend","Text","FormControl","type","value","onChange","e","target","in","ListGroup","Item","Math","trunc","toFixed","Modal","onHide","closeButton","Title","Body","RecipeScreen","as","HomeScreen","md","size","style","color","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf37bd08.chunk.js","sourcesContent":["import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container } from 'react-bootstrap'\n\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg='dark' expand='lg' collapseOnSelect variant='dark'>\n        <Container className='header'>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Pizza for dummies</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to='/receta'>\n                <Nav.Link>\n                  <i class='fas fa-pizza-slice'></i> Receta\n                </Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/calculadora'>\n                <Nav.Link>\n                  <i class='fas fa-calculator'></i> Calculadora de pizzas\n                </Nav.Link>\n              </LinkContainer>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>\n            Creado Por{' '}\n            <a href='https://twitter.com/UGuareschi'>Ulises Guareschi</a>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport {\n  Container,\n  InputGroup,\n  FormControl,\n  Row,\n  Col,\n  ListGroup,\n  Modal,\n  Button,\n  Collapse,\n} from 'react-bootstrap'\n\nconst CalculatorScreen = () => {\n  // Change mode\n  const [open, setOpen] = useState(false)\n  const [mode, setMode] = useState('simple')\n\n  // Modal\n  const [show, setShow] = useState(false)\n  const [modalType, setModalType] = useState('')\n  // SetIngredients\n  const [hidration, setHidration] = useState(65)\n  const [pizzaWeight, setPizzaWeight] = useState(250)\n  const [pizzaQty, setPizzaQty] = useState(1)\n  const divisorValue = 1000 + (hidration / 100) * 1000 + 23\n  const [flour, setFlour] = useState(\n    (pizzaWeight * pizzaQty * 1000) / divisorValue\n  )\n  const [water, setWater] = useState(flour * (hidration / 100))\n  const [salt, setSalt] = useState(flour * 0.02)\n  const [yeast, setYeast] = useState(flour * 0.003)\n\n  useEffect(() => {\n    setFlour((pizzaWeight * pizzaQty * 1000) / divisorValue)\n    setWater(flour * (hidration / 100))\n    setSalt(flour * 0.02)\n    setYeast(flour * 0.003)\n\n    if (open === true) {\n      setMode('avanzado')\n    } else {\n      setMode('simple')\n    }\n  }, [flour, pizzaQty, pizzaWeight, hidration, divisorValue, open])\n\n  return (\n    <>\n      <Container fluid='md' id='page-container content-wrap'>\n        <h1 className='text-center mt-3'>\n          Calculadora para masa de pizza napolitana\n        </h1>\n        <Row>\n          <Col>\n            <Button\n              variant={open === true ? 'dark' : 'light'}\n              onClick={() => setOpen(!open)}\n              aria-controls='collapse-ingredients'\n              aria-expanded={open}\n              className='mb-3 change-mode'\n              block\n            >\n              <span className='bigger'>{mode}</span>\n            </Button>\n          </Col>\n        </Row>\n        <Row className='calc-ing'>\n          <Col lg={12}>\n            <InputGroup className='mb-2'>\n              <InputGroup.Prepend>\n                <InputGroup.Text>Numero de pizzas</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                type='number'\n                value={pizzaQty}\n                onChange={(e) => setPizzaQty(e.target.value)}\n              />\n            </InputGroup>\n          </Col>\n\n          <Collapse in={open} id='collapse-ingredients'>\n            <div className='collapse-div'>\n              <Col lg={12}>\n                <InputGroup className='mb-2'>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>(g) Peso por masa</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    type='number'\n                    value={pizzaWeight}\n                    onChange={(e) => setPizzaWeight(e.target.value)}\n                  />\n                </InputGroup>\n              </Col>\n              <Col lg={12}>\n                <InputGroup className='mb-2'>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>\n                      (%) Porcentaje de hidratación\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    type='number'\n                    value={hidration}\n                    onChange={(e) => setHidration(e.target.value)}\n                  />\n                </InputGroup>\n              </Col>\n            </div>\n          </Collapse>\n        </Row>\n        <Row className='ingredients'>\n          <Col>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                Cantidad de harina: {Math.trunc(flour)}g\n                <i\n                  className='fas fa-question-circle icon-right'\n                  onClick={() => {\n                    setShow(true)\n                    setModalType('flour')\n                  }}\n                ></i>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                Cantidad de agua: {Math.trunc(water)}ml\n                <i\n                  className='fas fa-question-circle icon-right'\n                  onClick={() => {\n                    setShow(true)\n                    setModalType('water')\n                  }}\n                ></i>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                Cantidad de sal: {salt.toFixed(2)}g\n                <i\n                  className='fas fa-question-circle icon-right'\n                  onClick={() => {\n                    setShow(true)\n                    setModalType('salt')\n                  }}\n                ></i>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                Cantidad de levadura: {yeast.toFixed(2)}g\n                <i\n                  className='fas fa-question-circle icon-right'\n                  onClick={() => {\n                    setShow(true)\n                    setModalType('yeast')\n                  }}\n                ></i>\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n      <Modal show={show} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Cantidad de{' '}\n            {modalType === 'flour'\n              ? 'harina'\n              : modalType === 'water'\n              ? 'agua'\n              : modalType === 'salt'\n              ? 'sal'\n              : modalType === 'yeast'\n              ? 'levadura'\n              : ''}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {modalType === 'flour' ? (\n            <p>Contenido sobre harina</p>\n          ) : modalType === 'water' ? (\n            <p>Contenido sobre el agua</p>\n          ) : modalType === 'salt' ? (\n            <p>Contenido sobre la sal</p>\n          ) : modalType === 'yeast' ? (\n            <p>Contenido sobre la levadura</p>\n          ) : (\n            ''\n          )}\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default CalculatorScreen\n","import React from 'react'\nimport { ListGroup, Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst RecipeScreen = () => {\n  return (\n    <>\n      <Container fluid='md' id='page-container content-wrap'>\n        <Row className='mt-3'>\n          <Col>\n            <h3>Preparacion de la masa</h3>\n            <p>\n              <em>\n                Usar <Link to='/calculadora'>calculadora de pizzas</Link> para\n                modificar la cantidad en los ingredientes\n              </em>\n            </p>\n          </Col>\n        </Row>\n        <ListGroup variant='flush' as='ol'>\n          <ListGroup.Item as='li'>\n            En un recipiente agregagamos el agua a temperatura ambiente,\n            añadimos la sal y mezclamos hasta que se disuelva\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Es importante que la sal no contamine la levadura por lo tanto,\n            ahora agregamos por lo menos el 10% de la cantidad total de harina\n            que vamos a usar y mezclamos hasta que tengamos una consistencia\n            simil a la de una mezcla de panqueques\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Agregamos la levadura fresca y disolvemos en la mezcla\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Ahora de a poco se va añadiendo la harina y vamos mezclando hasta\n            que quede todo incorporado\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Una vez que vemos que tenemos una masa con todos los ingredientes\n            incorporados es momento de sacar la masa del recipiente y empezar a\n            amasar a mano en una superficie plana\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Amasamos hasta que tenemos una masa de una textura suave, pero\n            resistente y lo hacemos una bola.\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Para testear que la masa esta lista tenemos diferentes metodos:\n            <ul>\n              <li>Apretar con el pulgar la masa y ver si vuelve.</li>\n              <li>\n                Colocar un termometro en el centro de la masa y ver si la\n                temperatura esta entre 23 y 26 grados celcius.\n              </li>\n              <li>\n                Otro metodo es el famoso windowpane o el test de la ventana, que\n                consiste en tomar un pequeño pedazo de la masa y estirarlo hasta\n                que se forme una membrana translúcida, si se rompe antes la masa\n                significa que falta amasado\n              </li>\n            </ul>\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Cuando esta la masa lista la cubrimos con un paño humedo asi\n            mantenemos la masa húmeda durante 2 horas\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Despues de dejarla reposar 2 horas, ahora llegamos al punto donde\n            tenemos que dividir la masa en porciones de 250 gramos\n          </ListGroup.Item>\n          <ListGroup.Item>\n            Una vez que tengamos nuestras porciones de masa divididas vamos a\n            dejarlas fermentar en frío por lo menos 24 horas, para esto vamos a\n            dejarla en la heladera. Es importante que esten tapadas para que la\n            masa no se seque y siga húmeda\n          </ListGroup.Item>\n          <ListGroup.Item as='li'>\n            Finalmente vamos a retirar las porciones de nuestra heladera y las\n            vamos a dejar 2 a 4 horas a temperatura ambiente\n          </ListGroup.Item>\n          <ListGroup.Item>\n            Y ahora ya tendriamos lista las porciones de masa listas para ser\n            estiradas\n          </ListGroup.Item>\n        </ListGroup>\n      </Container>\n    </>\n  )\n}\n\nexport default RecipeScreen\n","import React from 'react'\nimport { Col, Container, Row, Button } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nconst HomeScreen = () => {\n  return (\n    <>\n      <Container fluid='md' id='page-container content-wrap'>\n        <Row className='text-center mt-3'>\n          <Col>\n            <h1>Pizza for Dummies</h1>\n            <h3>La mejor pizza de la manera mas sencilla.</h3>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12}>\n            <LinkContainer to='/receta'>\n              <Button variant='warning' size='lg' block>\n                <Col className='mb-3'>\n                  <i class='fas fa-pizza-slice fa-3x'></i>\n                </Col>\n                <Col>\n                  <h5 style={{ color: 'white' }}>Receta paso a paso</h5>\n                </Col>\n              </Button>\n            </LinkContainer>\n          </Col>\n          <Col md={12}>\n            <LinkContainer to='/calculadora'>\n              <Button variant='warning' size='lg' block>\n                <Col className='mb-3'>\n                  <i class='fas fa-calculator fa-3x'></i>\n                </Col>\n                <Col>\n                  <h5 style={{ color: 'white' }}>\n                    Calcula los ingredientes de la masa segun la cantidad de\n                    pizzas\n                  </h5>\n                </Col>\n              </Button>\n            </LinkContainer>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport CalculatorScreen from './screens/CalculatorScreen'\nimport RecipeScreen from './screens/RecipeScreen'\nimport HomeScreen from './screens/HomeScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Route path='/' component={HomeScreen} exact />\n      <Route path='/receta' component={RecipeScreen} />\n      <Route path='/calculadora' component={CalculatorScreen} />\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}